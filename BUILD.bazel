load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load("@rules_python//python:defs.bzl", "py_library")

# gazelle:python_manifest_file_name private/tools/gazelle_python.yaml
# gazelle:resolve py python.runfiles @rules_python//python/runfiles
# gazelle:python_label_convention :$distribution_name$
# gazelle:python_generation_mode file

exports_files([
    "MODULE.bazel",
    "requirements.in",
    "test-requirements.in",
    "version.bzl",
    "defs.bzl",
    "pyproject.toml",
])

alias(
    name = "buildifier",
    actual = "//private/tools:buildifier",
)

test_suite(
    name = "buildifier_test",
    tests = ["//private/tools:buildifier_test"],
)

alias(
    name = "gazelle",
    actual = "//private/tools:gazelle",
    tags = ["manual"],
)

py_library(
    name = "setup",
    testonly = True,
    srcs = [
        "setup.py",
    ],
    data = [
        "CHANGELOG.rst",
        "LICENSE.txt",
        "README.rst",
        "requirements.in",
        "version.bzl",
    ],
    visibility = ["//tests:__subpackages__"],
    deps = [
        "//req_compile:req_compile_bin",
    ],
)

bzl_library(
    name = "defs",
    srcs = ["defs.bzl"],
    visibility = ["//visibility:public"],
    deps = [
        "//private:annotation",
        "//private:compiler_rule",
        "//private:reqs_repo",
        "//private:whl_repo",
    ],
)

bzl_library(
    name = "repositories",
    srcs = ["repositories.bzl"],
    visibility = ["//visibility:public"],
    deps = [
        "//private:reqs_repo",
        "@bazel_tools//tools/build_defs/repo:http.bzl",
        "@bazel_tools//tools/build_defs/repo:utils.bzl",
    ],
)

# keep
bzl_library(
    name = "repositories_transitive",
    srcs = ["repositories_transitive.bzl"],
    visibility = ["//visibility:public"],
    deps = [],
)

bzl_library(
    name = "version",
    srcs = ["version.bzl"],
    visibility = ["//visibility:public"],
)
