load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load("@req_compile_test_annotations//:defs.bzl", "requirement")
load("@rules_cc//cc:defs.bzl", "cc_test")
load("@rules_python//python:defs.bzl", "py_test")
load("//:defs.bzl", "py_package_annotation_consumer", "py_reqs_compiler", "py_reqs_solution_test")

exports_files(["requirements.linux.txt"])

py_reqs_compiler(
    name = "requirements.linux.update",
    requirements_in = "requirements.in",
    requirements_txt = "requirements.linux.txt",
    target_compatible_with = ["@platforms//os:linux"],
)

py_reqs_solution_test(
    name = "requirements_linux_test",
    compiler = ":requirements.linux.update",
)

py_reqs_compiler(
    name = "requirements.macos.update",
    requirements_in = "requirements.in",
    requirements_txt = "requirements.macos.txt",
    target_compatible_with = ["@platforms//os:macos"],
)

py_reqs_solution_test(
    name = "requirements_macos_test",
    compiler = ":requirements.macos.update",
)

py_reqs_compiler(
    name = "requirements.windows.update",
    requirements_in = "requirements.in",
    requirements_txt = "requirements.windows.txt",
    target_compatible_with = ["@platforms//os:windows"],
)

py_reqs_solution_test(
    name = "requirements_windows_test",
    compiler = ":requirements.windows.update",
)

py_package_annotation_consumer(
    name = "numpy_headers",
    # Look for the `py_package_annotation_target` named `headers`.
    consume = "headers",
    package = requirement("numpy"),
)

cc_test(
    name = "numpy_consumer_test",
    srcs = ["numpy_consumer_test.cc"],
    deps = [":numpy_headers"],
)

bzl_library(
    name = "annotations_test_deps",
    srcs = ["annotations_test_deps.bzl"],
    visibility = ["//:__subpackages__"],
    deps = [
        "//:defs",
        "@bazel_tools//tools/build_defs/repo:utils.bzl",
    ],
)

# Direct third-party dependencies to our test dependencies for this test.
# gazelle:resolve py numpy @req_compile_test_annotations//:numpy
# gazelle:resolve py sphinx @req_compile_test_annotations//:sphinx

py_test(
    name = "annotations_test",
    srcs = ["annotations_test.py"],
    deps = [
        "@req_compile_test_annotations//:numpy",
        "@req_compile_test_annotations//:sphinx",
        "@rules_python//python/runfiles",
    ],
)
