load("//:defs.bzl", "py_reqs_compiler", "py_reqs_solution_test")

exports_files(["requirements.linux.txt"])

filegroup(
    name = "requirements",
    srcs = ["bazel-requirements.in"],
    data = [
        "//:requirements.in",
        "//:test-requirements.in",
    ],
)

alias(
    name = "requirements_compiler",
    actual = select({
        "@platforms//os:linux": ":requirements_linux_311",
        "@platforms//os:macos": ":requirements_macos_311",
        "@platforms//os:windows": ":requirements_windows_311",
    }),
)

py_reqs_compiler(
    name = "requirements_linux_311",
    requirements_in = ":requirements",
    requirements_txt = "requirements.linux.txt",
    target_compatible_with = ["@platforms//os:linux"],
)

py_reqs_solution_test(
    name = "requirements_linux_311_test",
    compiler = ":requirements_linux_311",
)

py_reqs_compiler(
    name = "requirements_macos_311",
    requirements_in = ":requirements",
    requirements_txt = "requirements.macos.txt",
    target_compatible_with = ["@platforms//os:macos"],
)

py_reqs_solution_test(
    name = "requirements_macos_311_test",
    compiler = ":requirements_macos_311",
)

py_reqs_compiler(
    name = "requirements_windows_311",
    requirements_in = ":requirements",
    requirements_txt = "requirements.windows.txt",
    target_compatible_with = ["@platforms//os:windows"],
)

py_reqs_solution_test(
    name = "requirements_windows_311_test",
    compiler = ":requirements_windows_311",
)
